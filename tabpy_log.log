2023-02-02,15:27:46 [INFO] (app.py:app:248): Parsing config file /opt/anaconda3/envs/open_cv_env/lib/python3.7/site-packages/tabpy/tabpy_server/app/../common/default.conf
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter port set to "9004" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter server_version set to "2.6.0" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter evaluate_enabled set to "True" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter evaluate_timeout set to "30" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter upload_dir set to "/opt/anaconda3/envs/open_cv_env/lib/python3.7/site-packages/tabpy/tmp/query_objects" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter transfer_protocol set to "http" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:216): Parameter certificate_file is not set
2023-02-02,15:27:46 [DEBUG] (app.py:app:216): Parameter key_file is not set
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter state_file_path set to "/opt/anaconda3/envs/open_cv_env/lib/python3.7/site-packages/tabpy/tabpy_server" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter static_path set to "/opt/anaconda3/envs/open_cv_env/lib/python3.7/site-packages/tabpy/tabpy_server/static" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:216): Parameter TABPY_PWD_FILE is not set
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter log_request_context set to "false" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter max_request_size_in_mb set to "100" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:210): Parameter gzip_enabled set to "True" from default value
2023-02-02,15:27:46 [DEBUG] (app.py:app:438): File /opt/anaconda3/envs/open_cv_env/lib/python3.7/site-packages/tabpy/tabpy_server/state.ini not found, creating from template /opt/anaconda3/envs/open_cv_env/lib/python3.7/site-packages/tabpy/tabpy_server/state.ini.template...
2023-02-02,15:27:46 [INFO] (app.py:app:443): Loading state from state file /opt/anaconda3/envs/open_cv_env/lib/python3.7/site-packages/tabpy/tabpy_server/state.ini
2023-02-02,15:27:46 [DEBUG] (app.py:app:320): Static pages folder set to "/opt/anaconda3/envs/open_cv_env/lib/python3.7/site-packages/tabpy/tabpy_server/static"
2023-02-02,15:27:46 [INFO] (app.py:app:339): Password file is not specified: Authentication is not enabled
2023-02-02,15:27:46 [INFO] (app.py:app:353): Call context logging is disabled
2023-02-02,15:27:46 [INFO] (app.py:app:129): Initializing TabPy...
2023-02-02,15:27:46 [DEBUG] (selector_events.py:selector_events:58): Using selector: KqueueSelector
2023-02-02,15:27:46 [INFO] (callbacks.py:callbacks:43): Initializing TabPy Server...
2023-02-02,15:27:46 [DEBUG] (state.py:state:615): Loading option 'None' from section [Query Objects Service Versions]...
2023-02-02,15:27:46 [DEBUG] (state.py:state:635): Returning value '[]'
2023-02-02,15:27:46 [DEBUG] (state.py:state:148): Collected endpoints: {}
2023-02-02,15:27:46 [INFO] (app.py:app:133): Done initializing TabPy.
2023-02-02,15:27:46 [INFO] (app.py:app:83): Setting max request size to 104857600 bytes
2023-02-02,15:27:46 [INFO] (callbacks.py:callbacks:64): Initializing models...
2023-02-02,15:27:46 [DEBUG] (state.py:state:615): Loading option 'None' from section [Query Objects Service Versions]...
2023-02-02,15:27:46 [DEBUG] (state.py:state:635): Returning value '[]'
2023-02-02,15:27:46 [DEBUG] (state.py:state:148): Collected endpoints: {}
2023-02-02,15:27:46 [INFO] (app.py:app:111): Web service listening on port 9004
2023-02-02,15:28:09 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,15:28:09 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,15:28:09 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,15:28:09 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,15:28:09 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,15:28:09 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,15:28:09 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,15:28:09 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,15:28:09 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,15:28:09 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,15:28:09 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,15:28:09 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,15:28:09 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,15:28:09 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,15:28:09 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,15:28:09 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,15:28:09 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,15:28:09 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,15:28:09 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,15:28:09 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 13.23ms
2023-02-02,16:06:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:06:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:06:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:06:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:06:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:06:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:06:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:06:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:06:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:06:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:06:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:14 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:06:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:14 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:06:14 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:06:14 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:06:14 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:06:14 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 15.54ms
2023-02-02,16:06:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:06:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:06:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:06:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:06:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:06:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:06:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:06:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:06:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:06:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:06:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:14 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:06:14 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors

2023-02-02,16:06:18 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 3083.14ms
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:06:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:06:18 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 4.84ms
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:06:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors

2023-02-02,16:06:18 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 2.58ms
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:06:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:06:18 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.14ms
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:06:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors

2023-02-02,16:06:18 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 2.14ms
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:06:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:06:18 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.49ms
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:06:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:06:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:06:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:06:18 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors

2023-02-02,16:06:18 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 3.25ms
2023-02-02,16:08:01 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:08:01 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:08:01 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:08:01 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:08:01 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:08:01 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:08:01 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:08:01 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:08:01 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:01 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:08:01 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:01 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:08:01 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:01 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:08:01 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:01 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:08:01 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:08:01 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:08:01 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:08:01 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 5.72ms
2023-02-02,16:08:01 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:08:01 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:08:01 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:08:01 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:08:01 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:08:01 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:08:01 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:08:01 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:08:01 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:01 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:08:01 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:01 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:08:01 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:01 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\nimport cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\n\nhistogram, color = color_histogram(link)\n', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:08:01 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 
 histogram, color = color_histogram(link)

2023-02-02,16:08:01 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'link' is not defined"
2023-02-02,16:08:01 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 11.16ms
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:08:02 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:08:02 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.69ms
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:08:02 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\nimport cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\n\nhistogram, color = color_histogram(link)', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 
 histogram, color = color_histogram(link)

2023-02-02,16:08:02 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'link' is not defined"
2023-02-02,16:08:02 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 5.66ms
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:08:02 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:08:02 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.69ms
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:08:02 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\nimport cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\n\nhistogram, color = color_histogram(link)', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 
 histogram, color = color_histogram(link)

2023-02-02,16:08:02 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'link' is not defined"
2023-02-02,16:08:02 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 6.00ms
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:08:02 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:08:02 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.70ms
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:08:02 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:08:02 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:08:02 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\nimport cv2\nimport urllib.request\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\n\nhistogram, color = color_histogram(link)', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:08:02 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 import cv2
 import urllib.request
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 
 histogram, color = color_histogram(link)

2023-02-02,16:08:02 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'link' is not defined"
2023-02-02,16:08:02 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 5.82ms
2023-02-02,16:20:42 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:20:42 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:20:42 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:20:42 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:20:42 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:20:42 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:20:42 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:20:42 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:20:42 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:20:42 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:20:42 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:20:42 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:20:42 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:20:42 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:20:42 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:20:42 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:20:42 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:20:42 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:20:42 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:20:42 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 10.35ms
2023-02-02,16:20:42 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:20:42 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:20:42 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:20:42 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:20:42 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:20:42 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:20:42 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:20:42 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:20:42 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:20:42 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:20:42 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:20:42 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:20:42 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:20:42 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nreturn df.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:20:42 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 return df.to_dict(orient="list")

2023-02-02,16:20:48 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 6255.63ms
2023-02-02,16:22:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:22:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:22:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:22:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:22:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:22:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:22:13 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:22:13 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:22:13 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:13 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:22:13 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:13 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:22:13 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:13 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:22:13 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:13 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:22:13 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:22:13 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:22:13 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:22:13 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.51ms
2023-02-02,16:22:13 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:22:13 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:22:13 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:22:13 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:22:13 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:22:13 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:22:13 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:22:13 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:22:13 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:13 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:22:13 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:13 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:22:13 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:13 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nhistogram, color = color_histogram(image)\n\nreturn histogram, color', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:22:13 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 histogram, color = color_histogram(image)
 
 return histogram, color

2023-02-02,16:22:14 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: {0>"
2023-02-02,16:22:14 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 8.30ms
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:22:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:22:14 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.73ms
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:22:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nhistogram, color = color_histogram(image)\n\nreturn histogram, color', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 histogram, color = color_histogram(image)
 
 return histogram, color

2023-02-02,16:22:14 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: {0>"
2023-02-02,16:22:14 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.93ms
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:22:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:22:14 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.68ms
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:22:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nhistogram, color = color_histogram(image)\n\nreturn histogram, color', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 histogram, color = color_histogram(image)
 
 return histogram, color

2023-02-02,16:22:14 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: {0>"
2023-02-02,16:22:14 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 2.74ms
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:22:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:22:14 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.92ms
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:22:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:22:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:22:14 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nhistogram, color = color_histogram(image)\n\nreturn histogram, color', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:22:14 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 histogram, color = color_histogram(image)
 
 return histogram, color

2023-02-02,16:22:14 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: {0>"
2023-02-02,16:22:14 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 2.99ms
2023-02-02,16:23:08 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:23:08 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:23:08 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:23:08 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:23:08 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:23:08 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:23:08 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:23:08 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:23:08 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:23:08 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:23:08 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:23:08 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:23:08 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:23:08 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:23:08 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:23:08 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:23:08 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:23:08 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:23:08 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:23:08 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 3.55ms
2023-02-02,16:23:08 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:23:08 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:23:08 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:23:08 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:23:08 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:23:08 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:23:08 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:23:08 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:23:08 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:23:08 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:23:08 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:23:08 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:23:08 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:23:08 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nreturn image', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:23:08 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 return image

2023-02-02,16:23:08 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 2.93ms
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:26:14 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.42ms
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nreturn color_histogram(image)', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 return color_histogram(image)

2023-02-02,16:26:14 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: {0>"
2023-02-02,16:26:14 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 4.02ms
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:26:14 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.90ms
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nreturn color_histogram(image)', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 return color_histogram(image)

2023-02-02,16:26:14 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: {0>"
2023-02-02,16:26:14 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.08ms
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:26:14 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.93ms
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nreturn color_histogram(image)', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 return color_histogram(image)

2023-02-02,16:26:14 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: {0>"
2023-02-02,16:26:14 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.03ms
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:26:14 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.19ms
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:14 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:14 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:14 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nreturn color_histogram(image)', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:26:14 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 return color_histogram(image)

2023-02-02,16:26:14 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: {0>"
2023-02-02,16:26:14 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 2.87ms
2023-02-02,16:26:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:30 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:26:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:30 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:26:30 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:26:30 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:26:30 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:26:30 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.06ms
2023-02-02,16:26:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:26:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:26:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:26:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:26:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:26:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:26:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:26:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:26:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:26:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:26:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:26:30 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\ndef color_histogram(photo):\n    url_response = urllib.request.Request(photo, headers={\'User-Agent\': \'Mozilla/5.0\'})\n    with urllib.request.urlopen(url_response) as url:\n        s = url.read()\n\n    img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n    channels = cv2.split(img)\n    colors = ["b", "g", "r"]\n\n    hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n    colors = colors[0]\n\n    return hist, colors\n\ndf = pd.DataFrame(_arg1[\'link\'])\nimage = df.to_dict(orient="list")\n\nreturn image', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:26:30 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 def color_histogram(photo):
     url_response = urllib.request.Request(photo, headers={'User-Agent': 'Mozilla/5.0'})
     with urllib.request.urlopen(url_response) as url:
         s = url.read()
 
     img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
     channels = cv2.split(img)
     colors = ["b", "g", "r"]
 
     hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
     colors = colors[0]
 
     return hist, colors
 
 df = pd.DataFrame(_arg1['link'])
 image = df.to_dict(orient="list")
 
 return image

2023-02-02,16:26:30 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 2.76ms
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:32:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:32:18 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 3.30ms
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:32:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\nurl_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = ['b', 'g', 'r']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\ncolors = colors[0]\n\nreturn hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg']}}'...
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 colors = colors[0]
 
 return hist, colors
 
 
 

2023-02-02,16:32:18 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: ['https>"
2023-02-02,16:32:18 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.13ms
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:32:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:32:18 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.72ms
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:32:18 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:32:18 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:32:18 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\nurl_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = ['b', 'g', 'r']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\ncolors = colors[0]\n\nreturn hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:32:18 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 colors = colors[0]
 
 return hist, colors
 
 
 

2023-02-02,16:32:18 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: ['https>"
2023-02-02,16:32:18 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 2.40ms
2023-02-02,16:33:41 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:33:41 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:33:41 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:33:41 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:33:41 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:33:41 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:33:41 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:33:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:33:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:33:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:33:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:33:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:33:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:33:41 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:33:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:33:41 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:33:41 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:33:41 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:33:41 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:33:41 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.58ms
2023-02-02,16:33:41 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:33:41 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:33:41 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:33:41 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:33:41 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:33:41 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:33:41 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:33:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:33:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:33:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:33:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:33:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:33:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:33:41 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\nurl = _arg1\nurl_response = urllib.request.Request(url, headers={'User-Agent': 'Mozilla/5.0'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = ['b', 'g', 'r']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\ncolors = colors[0]\n\nreturn hist\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:33:41 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 url = _arg1
 url_response = urllib.request.Request(url, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 colors = colors[0]
 
 return hist
 
 
 

2023-02-02,16:33:41 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: ['https>"
2023-02-02,16:33:41 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.29ms
2023-02-02,16:34:50 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:34:50 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:34:50 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:34:50 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:34:50 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:34:50 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:34:50 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:34:50 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:34:50 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:34:50 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:34:50 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:34:50 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:34:50 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:34:50 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:34:50 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:34:50 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:34:50 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:34:50 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:34:50 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:34:50 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 3.28ms
2023-02-02,16:34:50 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:34:50 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:34:50 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:34:50 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:34:50 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:34:50 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:34:50 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:34:50 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:34:50 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:34:50 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:34:50 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:34:50 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:34:50 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:34:50 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\n#url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\n#with urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\n#img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n#channels = cv2.split(img)\n#colors = ['b', 'g', 'r']\n\n#hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn _arg1 #hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:34:50 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 #url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 #with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 #img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 #channels = cv2.split(img)
 #colors = ['b', 'g', 'r']
 
 #hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return _arg1 #hist, colors
 
 
 

2023-02-02,16:34:50 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="IndentationError : unexpected indent (<string>, line 13)"
2023-02-02,16:34:50 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 84.75ms
2023-02-02,16:35:05 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:35:05 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:35:05 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:35:05 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:35:05 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:35:05 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:35:05 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:35:05 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:35:05 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:05 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:35:05 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:05 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:35:05 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:05 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:35:05 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:05 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:35:05 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:35:05 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:35:05 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:35:05 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 3.75ms
2023-02-02,16:35:05 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:35:05 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:35:05 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:35:05 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:35:05 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:35:05 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:35:05 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:35:05 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:35:05 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:05 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:35:05 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:05 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:35:05 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:05 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\n#url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\n#with urllib.request.urlopen(url_response) as url:\n    #s = url.read()\n\n#img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n#channels = cv2.split(img)\n#colors = ['b', 'g', 'r']\n\n#hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn _arg1 #hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:35:05 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 #url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 #with urllib.request.urlopen(url_response) as url:
     #s = url.read()
 
 #img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 #channels = cv2.split(img)
 #colors = ['b', 'g', 'r']
 
 #hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return _arg1 #hist, colors
 
 
 

2023-02-02,16:35:05 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 4.41ms
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:35:28 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:35:28 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.99ms
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:35:28 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\n#url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\n#with urllib.request.urlopen(url_response) as url:\n    #s = url.read()\n\n#img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n#channels = cv2.split(img)\n#colors = ['b', 'g', 'r']\n\n#hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn _arg1 #hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg']}}'...
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 #url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 #with urllib.request.urlopen(url_response) as url:
     #s = url.read()
 
 #img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 #channels = cv2.split(img)
 #colors = ['b', 'g', 'r']
 
 #hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return _arg1 #hist, colors
 
 
 

2023-02-02,16:35:28 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 2.90ms
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:35:28 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\n#url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\n#with urllib.request.urlopen(url_response) as url:\n    #s = url.read()\n\n#img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n#channels = cv2.split(img)\n#colors = ['b', 'g', 'r']\n\n#hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn _arg1 #hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 #url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 #with urllib.request.urlopen(url_response) as url:
     #s = url.read()
 
 #img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 #channels = cv2.split(img)
 #colors = ['b', 'g', 'r']
 
 #hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return _arg1 #hist, colors
 
 
 

2023-02-02,16:35:28 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 2.51ms
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:35:28 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:35:28 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.30ms
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:35:28 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:35:28 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:35:28 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\n#url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\n#with urllib.request.urlopen(url_response) as url:\n    #s = url.read()\n\n#img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n#channels = cv2.split(img)\n#colors = ['b', 'g', 'r']\n\n#hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn _arg1 #hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:35:28 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 #url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 #with urllib.request.urlopen(url_response) as url:
     #s = url.read()
 
 #img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 #channels = cv2.split(img)
 #colors = ['b', 'g', 'r']
 
 #hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return _arg1 #hist, colors
 
 
 

2023-02-02,16:35:28 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 1.96ms
2023-02-02,16:36:53 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:36:53 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:36:53 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:36:53 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:36:53 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:36:53 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:36:53 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:36:53 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:36:53 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:36:53 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:36:53 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:36:53 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:36:53 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:36:53 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:36:53 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:36:53 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:36:53 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:36:53 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:36:53 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:36:53 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 4.74ms
2023-02-02,16:36:53 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:36:53 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:36:53 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:36:53 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:36:53 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:36:53 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:36:53 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:36:53 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:36:53 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:36:53 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:36:53 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:36:53 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:36:53 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:36:53 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\n#url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\n#with urllib.request.urlopen(url_response) as url:\n    #s = url.read()\n\n#img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n#channels = cv2.split(img)\n#colors = ['b', 'g', 'r']\n\n#hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn ('+_arg1+') #hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:36:53 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 #url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 #with urllib.request.urlopen(url_response) as url:
     #s = url.read()
 
 #img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 #channels = cv2.split(img)
 #colors = ['b', 'g', 'r']
 
 #hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return ('+_arg1+') #hist, colors
 
 
 

2023-02-02,16:36:53 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 3.11ms
2023-02-02,16:37:06 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:37:06 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:37:06 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:37:06 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:37:06 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:37:06 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:37:06 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:37:06 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:37:06 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:06 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:37:06 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:06 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:37:06 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:06 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:37:06 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:06 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:37:06 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:37:06 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:37:06 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:37:06 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.47ms
2023-02-02,16:37:06 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:37:06 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:37:06 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:37:06 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:37:06 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:37:06 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:37:06 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:37:06 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:37:06 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:06 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:37:06 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:06 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:37:06 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:06 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\n#url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\n#with urllib.request.urlopen(url_response) as url:\n    #s = url.read()\n\n#img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n#channels = cv2.split(img)\n#colors = ['b', 'g', 'r']\n\n#hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn ('+ _arg1 +') #hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:37:06 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 #url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 #with urllib.request.urlopen(url_response) as url:
     #s = url.read()
 
 #img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 #channels = cv2.split(img)
 #colors = ['b', 'g', 'r']
 
 #hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return ('+ _arg1 +') #hist, colors
 
 
 

2023-02-02,16:37:06 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 2.83ms
2023-02-02,16:37:37 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:37:37 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:37:37 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:37:37 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:37:37 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:37:37 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:37:37 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:37:37 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:37:37 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:37 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:37:37 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:37 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:37:37 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:37 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:37:37 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:37 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:37:37 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:37:37 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:37:37 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:37:37 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 4.39ms
2023-02-02,16:37:37 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:37:37 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:37:37 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:37:37 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:37:37 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:37:37 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:37:37 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:37:37 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:37:37 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:37 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:37:37 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:37 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:37:37 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:37 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\n#url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\n#with urllib.request.urlopen(url_response) as url:\n    #s = url.read()\n\n#img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n#channels = cv2.split(img)\n#colors = ['b', 'g', 'r']\n\n#hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn _arg1 #hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:37:37 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 #url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 #with urllib.request.urlopen(url_response) as url:
     #s = url.read()
 
 #img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 #channels = cv2.split(img)
 #colors = ['b', 'g', 'r']
 
 #hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return _arg1 #hist, colors
 
 
 

2023-02-02,16:37:37 [INFO] (web.py:web:2243): 200 POST /evaluate (127.0.0.1) 3.04ms
2023-02-02,16:37:54 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:37:54 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:37:54 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:37:54 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:37:54 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:37:54 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:37:54 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:37:54 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:37:54 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:54 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:37:54 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:54 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:37:54 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:54 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:37:54 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:54 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:37:54 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:37:54 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:37:54 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:37:54 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 7.78ms
2023-02-02,16:37:54 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:37:54 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:37:54 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:37:54 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:37:54 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:37:54 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:37:54 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:37:54 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:37:54 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:54 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:37:54 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:54 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:37:54 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:37:54 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\nurl_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\n#with urllib.request.urlopen(url_response) as url:\n    #s = url.read()\n\n#img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\n#channels = cv2.split(img)\n#colors = ['b', 'g', 'r']\n\n#hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn url_response #hist, colors\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:37:54 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 #with urllib.request.urlopen(url_response) as url:
     #s = url.read()
 
 #img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 #channels = cv2.split(img)
 #colors = ['b', 'g', 'r']
 
 #hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return url_response #hist, colors
 
 
 

2023-02-02,16:37:54 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="TypeError : Object of type Request is not JSON serializable"
2023-02-02,16:37:54 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 2.75ms
2023-02-02,16:38:41 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:38:41 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:38:41 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:38:41 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:38:41 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:38:41 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:38:41 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:38:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:38:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:38:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:38:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:38:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:38:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:38:41 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:38:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:38:41 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:38:41 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:38:41 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:38:41 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:38:41 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 3.25ms
2023-02-02,16:38:41 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:38:41 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:38:41 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:38:41 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:38:41 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:38:41 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:38:41 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:38:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:38:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:38:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:38:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:38:41 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:38:41 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:38:41 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': "\n\nimport cv2\nimport urllib.request\nimport pandas as pd\nimport numpy as np\n\n\n\nurl_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = ['b', 'g', 'r']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nreturn hist\n\n\n\n", 'data': {'_arg1': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}'...
2023-02-02,16:38:41 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 
 
 import cv2
 import urllib.request
 import pandas as pd
 import numpy as np
 
 
 
 url_response = urllib.request.Request(_arg1, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 return hist
 
 
 

2023-02-02,16:38:41 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: ['https>"
2023-02-02,16:38:41 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 4.33ms
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:43:38 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 3.70ms
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:43:38 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'urllib' is not defined"
2023-02-02,16:43:38 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 18.39ms
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:43:38 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.13ms
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:43:38 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'urllib' is not defined"
2023-02-02,16:43:38 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.69ms
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:43:38 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.83ms
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:43:38 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'urllib' is not defined"
2023-02-02,16:43:38 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.21ms
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:43:38 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.75ms
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:38 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:38 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:38 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:43:38 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:43:38 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'urllib' is not defined"
2023-02-02,16:43:38 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.26ms
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:59 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:43:59 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.65ms
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:59 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\nimport urllib.request\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 import urllib.request
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:43:59 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: 0    https>"
2023-02-02,16:43:59 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 7.04ms
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:59 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:43:59 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.72ms
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:59 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\nimport urllib.request\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 import urllib.request
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:43:59 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: 0    https>"
2023-02-02,16:43:59 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.30ms
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:59 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:43:59 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.71ms
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:59 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\nimport urllib.request\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 import urllib.request
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:43:59 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: 0    https>"
2023-02-02,16:43:59 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.41ms
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:59 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:43:59 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.69ms
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:43:59 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:43:59 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:43:59 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\nimport urllib.request\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:43:59 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 import urllib.request
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:43:59 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="URLError : <urlopen error unknown url type: 0    https>"
2023-02-02,16:43:59 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 3.15ms
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:44:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:44:30 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 4.60ms
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:44:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\nimport urllib.request\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"][0]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 import urllib.request
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"][0]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:44:30 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'cv2' is not defined"
2023-02-02,16:44:30 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 106.62ms
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:44:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:44:30 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.80ms
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:44:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\nimport urllib.request\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"][0]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 import urllib.request
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"][0]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:44:30 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'cv2' is not defined"
2023-02-02,16:44:30 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 68.41ms
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:44:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:44:30 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 2.01ms
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:44:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\nimport urllib.request\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"][0]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 import urllib.request
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"][0]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:44:30 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'cv2' is not defined"
2023-02-02,16:44:30 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 60.71ms
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:44:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:44:30 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 1.77ms
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:44:30 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:44:30 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:44:30 [DEBUG] (base_handler.py:base_handler:115): Processing POST request '{'script': 'import pandas as pd\nimport numpy as np\nimport urllib.request\n\ndf = pd.DataFrame(_arg1)\nimgs = df["link"][0]\n\nurl_response = urllib.request.Request(imgs, headers={\'User-Agent\': \'Mozilla/5.0\'})\nwith urllib.request.urlopen(url_response) as url:\n    s = url.read()\n\nimg = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)\n\nchannels = cv2.split(img)\ncolors = [\'b\', \'g\', \'r\']\n\nhist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])\n#colors = colors[0]\n\nhist = pd.DataFrame(hist)\n\nreturn hist.to_dict(orient="list")', 'data': {'_arg1': {'link': ['https://cdn.pixabay.com/photo/2017/10/10/07/48/hills-2836301__480.jpg', 'https://cdn.pixabay.com/photo/2018/02/13/23/41/nature-3151869__480.jpg']}}}'...
2023-02-02,16:44:30 [INFO] (base_handler.py:base_handler:115): function to evaluate=def _user_script(tabpy, _arg1):
 import pandas as pd
 import numpy as np
 import urllib.request
 
 df = pd.DataFrame(_arg1)
 imgs = df["link"][0]
 
 url_response = urllib.request.Request(imgs, headers={'User-Agent': 'Mozilla/5.0'})
 with urllib.request.urlopen(url_response) as url:
     s = url.read()
 
 img = cv2.imdecode(np.asarray(bytearray(s), dtype=np.uint8), -1)
 
 channels = cv2.split(img)
 colors = ['b', 'g', 'r']
 
 hist = cv2.calcHist([channels[0]], [0], None, [256], [0, 256])
 #colors = colors[0]
 
 hist = pd.DataFrame(hist)
 
 return hist.to_dict(orient="list")

2023-02-02,16:44:30 [ERROR] (base_handler.py:base_handler:115): Responding with status=500, message="Error processing script", info="NameError : name 'cv2' is not defined"
2023-02-02,16:44:30 [ERROR] (web.py:web:2243): 500 POST /evaluate (127.0.0.1) 74.03ms
2023-02-02,16:45:16 [DEBUG] (base_handler.py:base_handler:115): Checking if need to handle authentication
2023-02-02,16:45:16 [DEBUG] (base_handler.py:base_handler:115): Handling authentication
2023-02-02,16:45:16 [INFO] (base_handler.py:base_handler:115): Authentication is not a required feature for API "v1"
2023-02-02,16:45:16 [DEBUG] (base_handler.py:base_handler:115): Checking request headers for authentication data
2023-02-02,16:45:16 [INFO] (base_handler.py:base_handler:115): Authorization header not found
2023-02-02,16:45:16 [DEBUG] (base_handler.py:base_handler:115): authentication not required, username and password are none
2023-02-02,16:45:16 [DEBUG] (state.py:state:511): Collecting Access-Control-Allow-Origin from state file ...
2023-02-02,16:45:16 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2023-02-02,16:45:16 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:45:16 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2023-02-02,16:45:16 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:45:16 [DEBUG] (state.py:state:615): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2023-02-02,16:45:16 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:45:16 [DEBUG] (state.py:state:615): Loading option 'Description' from section [Service Info]...
2023-02-02,16:45:16 [DEBUG] (state.py:state:635): Returning value ''
2023-02-02,16:45:16 [DEBUG] (state.py:state:615): Loading option 'Creation Time' from section [Service Info]...
2023-02-02,16:45:16 [DEBUG] (state.py:state:635): Returning value '0'
2023-02-02,16:45:16 [DEBUG] (state.py:state:615): Loading option 'Name' from section [Service Info]...
2023-02-02,16:45:16 [DEBUG] (state.py:state:635): Returning value 'TabPy Server'
2023-02-02,16:45:16 [INFO] (web.py:web:2243): 200 GET /info (127.0.0.1) 4.05ms
2023-02-02,22:05:47 [CRITICAL] (app.py:app:121): Exiting on signal 2...
2023-02-02,22:05:47 [INFO] (app.py:app:127): Shutting down TabPy...
2023-02-02,22:05:47 [INFO] (app.py:app:127): Shutting down TabPy...
